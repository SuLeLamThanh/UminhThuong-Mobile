// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResearchDatabase.Infrastructure.Data;

#nullable disable

namespace ResearchDatabase.Infrastructure.Migrations
{
    [DbContext(typeof(ResearchDbContext))]
    [Migration("20241215172200_update11")]
    partial class update11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeographicDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("GeographicDistributions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Kenya",
                            Location = "Savannah",
                            Notes = "Common in protected areas",
                            Region = "Africa",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            Country = "USA",
                            Location = "Fields",
                            Notes = "Widely cultivated",
                            Region = "Americas",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            Country = "China",
                            Location = "Mountains",
                            Notes = "Rare, used in traditional medicine",
                            Region = "Asia",
                            SpeciesId = 3
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Affiliation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Affiliation = "Wildlife Conservation Society",
                            Name = "Jane Goodall"
                        },
                        new
                        {
                            Id = 2,
                            Affiliation = "International Maize and Wheat Improvement Center",
                            Name = "Norman Borlaug"
                        },
                        new
                        {
                            Id = 3,
                            Affiliation = "Fungal Research Institute",
                            Name = "Fleming Xia"
                        },
                        new
                        {
                            Id = 4,
                            Affiliation = "BBC",
                            Name = "David Attenborough"
                        },
                        new
                        {
                            Id = 5,
                            Affiliation = "Cold Spring Harbor Laboratory",
                            Name = "Barbara McClintock"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CharacteristicType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PhylumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhylumId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mammalia",
                            PhylumId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Magnoliopsida",
                            PhylumId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sordariomycetes",
                            PhylumId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Oligohymenophorea",
                            PhylumId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cyanophyceae",
                            PhylumId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fucales",
                            PhylumId = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Methanobacteria",
                            PhylumId = 7
                        },
                        new
                        {
                            Id = 8,
                            Name = "Tubulinea",
                            PhylumId = 8
                        },
                        new
                        {
                            Id = 9,
                            Name = "Orthoretrovirinae",
                            PhylumId = 9
                        },
                        new
                        {
                            Id = 10,
                            Name = "RNA-based",
                            PhylumId = 10
                        },
                        new
                        {
                            Id = 11,
                            Name = "Pinopsida",
                            PhylumId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "Pteridopsida",
                            PhylumId = 2
                        },
                        new
                        {
                            Id = 13,
                            Name = "Saccharomycetes",
                            PhylumId = 3
                        },
                        new
                        {
                            Id = 14,
                            Name = "Dinophyceae",
                            PhylumId = 6
                        },
                        new
                        {
                            Id = 15,
                            Name = "Basidiomycetes",
                            PhylumId = 15
                        },
                        new
                        {
                            Id = 16,
                            Name = "Charophyceae",
                            PhylumId = 16
                        },
                        new
                        {
                            Id = 17,
                            Name = "Radiolaria",
                            PhylumId = 17
                        },
                        new
                        {
                            Id = 18,
                            Name = "Coccidia",
                            PhylumId = 18
                        },
                        new
                        {
                            Id = 19,
                            Name = "Leptospira",
                            PhylumId = 19
                        },
                        new
                        {
                            Id = 20,
                            Name = "Florideophyceae",
                            PhylumId = 20
                        },
                        new
                        {
                            Id = 21,
                            Name = "Xenophyophoria",
                            PhylumId = 21
                        },
                        new
                        {
                            Id = 22,
                            Name = "Cercomonadidae",
                            PhylumId = 22
                        },
                        new
                        {
                            Id = 23,
                            Name = "Cryptophyceae",
                            PhylumId = 23
                        },
                        new
                        {
                            Id = 24,
                            Name = "Haptomonadida",
                            PhylumId = 24
                        },
                        new
                        {
                            Id = 25,
                            Name = "Choanoflagellida",
                            PhylumId = 25
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ConservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ConservationStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Not currently at risk",
                            Name = "Least Concern",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Facing risk of extinction in the wild",
                            Name = "Vulnerable",
                            Severity = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Description = "High risk of extinction in the wild",
                            Name = "Endangered",
                            Severity = "High"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Extremely high risk of extinction in the wild",
                            Name = "Critically Endangered",
                            Severity = "Very High"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Known to exist only in captivity or cultivation",
                            Name = "Extinct in the Wild",
                            Severity = "Very High"
                        },
                        new
                        {
                            Id = 6,
                            Description = "No known individuals remaining",
                            Name = "Extinct",
                            Severity = "Very High"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Close to qualifying for a threatened category",
                            Name = "Near Threatened",
                            Severity = "Medium"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Insufficient information to assess risk of extinction",
                            Name = "Data Deficient",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 9,
                            Description = "In danger of extinction, immediate action needed",
                            Name = "Critical Risk",
                            Severity = "Very High"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Very few individuals remaining",
                            Name = "Rare",
                            Severity = "Medium"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Status unclear, further study required",
                            Name = "Indeterminate",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 12,
                            Description = "No evaluation has been made",
                            Name = "Not Evaluated",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Population stable, no significant risk",
                            Name = "Sufficiently Stable",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Species population has significantly improved",
                            Name = "Recovered",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Species in the process of recovery",
                            Name = "In Recovery",
                            Severity = "Medium"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Species population is growing",
                            Name = "Population Increasing",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Species no longer exists in its historical range",
                            Name = "Endangered (Historical)",
                            Severity = "High"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Species at risk of becoming endangered",
                            Name = "Threatened",
                            Severity = "High"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Extinct in a specific region, but exists elsewhere",
                            Name = "Regionally Extinct",
                            Severity = "Medium"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Vulnerable in specific regions or areas",
                            Name = "Vulnerable (Regional)",
                            Severity = "Medium"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Species under special legal or physical protection",
                            Name = "Under Protection",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Facing a critical risk of extinction within the next few years",
                            Name = "Endangered (Critical)",
                            Severity = "Very High"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Believed to be in decline but not yet confirmed",
                            Name = "Suspected Decline",
                            Severity = "Medium"
                        },
                        new
                        {
                            Id = 24,
                            Description = "A specific subspecies is at risk of extinction",
                            Name = "Vulnerable (Subspecies)",
                            Severity = "Medium"
                        },
                        new
                        {
                            Id = 25,
                            Description = "General term for species that face threat of extinction",
                            Name = "At Risk",
                            Severity = "High"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Families");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Felidae",
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Canidae",
                            OrderId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hominidae",
                            OrderId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cercopithecidae",
                            OrderId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Muridae",
                            OrderId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Cricetidae",
                            OrderId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "Poaceae",
                            OrderId = 4
                        },
                        new
                        {
                            Id = 8,
                            Name = "Rosaceae",
                            OrderId = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fabaceae",
                            OrderId = 6
                        },
                        new
                        {
                            Id = 10,
                            Name = "Clavicipitaceae",
                            OrderId = 7
                        },
                        new
                        {
                            Id = 11,
                            Name = "Aspergillaceae",
                            OrderId = 8
                        },
                        new
                        {
                            Id = 12,
                            Name = "Sordariaceae",
                            OrderId = 9
                        },
                        new
                        {
                            Id = 13,
                            Name = "Ciliophoridae",
                            OrderId = 10
                        },
                        new
                        {
                            Id = 14,
                            Name = "Dinophyceae",
                            OrderId = 11
                        },
                        new
                        {
                            Id = 15,
                            Name = "Methanococcaceae",
                            OrderId = 12
                        },
                        new
                        {
                            Id = 16,
                            Name = "Methanobacteriaceae",
                            OrderId = 13
                        },
                        new
                        {
                            Id = 17,
                            Name = "Pteridaceae",
                            OrderId = 14
                        },
                        new
                        {
                            Id = 18,
                            Name = "Cyatheaceae",
                            OrderId = 15
                        },
                        new
                        {
                            Id = 19,
                            Name = "Saccharomycetaceae",
                            OrderId = 16
                        },
                        new
                        {
                            Id = 20,
                            Name = "Agaricaceae",
                            OrderId = 17
                        },
                        new
                        {
                            Id = 21,
                            Name = "Coleochaetaceae",
                            OrderId = 18
                        },
                        new
                        {
                            Id = 22,
                            Name = "Spirochaetaceae",
                            OrderId = 19
                        },
                        new
                        {
                            Id = 23,
                            Name = "Corallinaceae",
                            OrderId = 20
                        },
                        new
                        {
                            Id = 24,
                            Name = "Psamminidae",
                            OrderId = 21
                        },
                        new
                        {
                            Id = 25,
                            Name = "Cercomonadaceae",
                            OrderId = 22
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Genus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Genera");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FamilyId = 1,
                            Name = "Panthera"
                        },
                        new
                        {
                            Id = 2,
                            FamilyId = 2,
                            Name = "Zea"
                        },
                        new
                        {
                            Id = 3,
                            FamilyId = 3,
                            Name = "Cordyceps"
                        },
                        new
                        {
                            Id = 4,
                            FamilyId = 1,
                            Name = "Felis"
                        },
                        new
                        {
                            Id = 5,
                            FamilyId = 2,
                            Name = "Vulpes"
                        },
                        new
                        {
                            Id = 6,
                            FamilyId = 2,
                            Name = "Canis"
                        },
                        new
                        {
                            Id = 7,
                            FamilyId = 3,
                            Name = "Gorilla"
                        },
                        new
                        {
                            Id = 8,
                            FamilyId = 3,
                            Name = "Pongo"
                        },
                        new
                        {
                            Id = 9,
                            FamilyId = 4,
                            Name = "Macaca"
                        },
                        new
                        {
                            Id = 10,
                            FamilyId = 4,
                            Name = "Cercopithecus"
                        },
                        new
                        {
                            Id = 11,
                            FamilyId = 5,
                            Name = "Mus"
                        },
                        new
                        {
                            Id = 12,
                            FamilyId = 6,
                            Name = "Rattus"
                        },
                        new
                        {
                            Id = 13,
                            FamilyId = 5,
                            Name = "Oryctolagus"
                        },
                        new
                        {
                            Id = 14,
                            FamilyId = 7,
                            Name = "Triticum"
                        },
                        new
                        {
                            Id = 15,
                            FamilyId = 7,
                            Name = "Secale"
                        },
                        new
                        {
                            Id = 16,
                            FamilyId = 8,
                            Name = "Rubus"
                        },
                        new
                        {
                            Id = 17,
                            FamilyId = 8,
                            Name = "Malus"
                        },
                        new
                        {
                            Id = 18,
                            FamilyId = 9,
                            Name = "Phaseolus"
                        },
                        new
                        {
                            Id = 19,
                            FamilyId = 9,
                            Name = "Vigna"
                        },
                        new
                        {
                            Id = 20,
                            FamilyId = 10,
                            Name = "Claviceps"
                        },
                        new
                        {
                            Id = 21,
                            FamilyId = 11,
                            Name = "Aspergillus"
                        },
                        new
                        {
                            Id = 22,
                            FamilyId = 11,
                            Name = "Penicillium"
                        },
                        new
                        {
                            Id = 23,
                            FamilyId = 12,
                            Name = "Fusarium"
                        },
                        new
                        {
                            Id = 24,
                            FamilyId = 12,
                            Name = "Alternaria"
                        },
                        new
                        {
                            Id = 25,
                            FamilyId = 22,
                            Name = "Spirochaeta"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Habitat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<float?>("Humidity")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float?>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Habitats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Climate = "Dry",
                            Description = "Grasslands with sparse trees",
                            Humidity = 40f,
                            Name = "Savannah",
                            Temperature = 30f
                        },
                        new
                        {
                            Id = 2,
                            Climate = "Humid",
                            Description = "Dense, humid forests",
                            Humidity = 85f,
                            Name = "Tropical Rainforest",
                            Temperature = 25f
                        },
                        new
                        {
                            Id = 3,
                            Climate = "Cold",
                            Description = "High altitude ecosystems",
                            Humidity = 60f,
                            Name = "Mountain Ranges",
                            Temperature = 10f
                        },
                        new
                        {
                            Id = 4,
                            Climate = "Arid",
                            Description = "Hot, arid regions with little vegetation",
                            Humidity = 20f,
                            Name = "Desert",
                            Temperature = 40f
                        },
                        new
                        {
                            Id = 5,
                            Climate = "Moderate",
                            Description = "Forests with moderate climate and distinct seasons",
                            Humidity = 75f,
                            Name = "Temperate Forest",
                            Temperature = 15f
                        },
                        new
                        {
                            Id = 6,
                            Climate = "Humid",
                            Description = "Water-saturated land with diverse flora and fauna",
                            Humidity = 80f,
                            Name = "Wetlands",
                            Temperature = 22f
                        },
                        new
                        {
                            Id = 7,
                            Climate = "Semi-arid",
                            Description = "Flat, open areas with tall grasses",
                            Humidity = 50f,
                            Name = "Grasslands",
                            Temperature = 20f
                        },
                        new
                        {
                            Id = 8,
                            Climate = "Varies",
                            Description = "Oceans and seas",
                            Humidity = 90f,
                            Name = "Marine",
                            Temperature = 15f
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Kingdom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Kingdoms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Animalia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Plantae"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fungi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Protista"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Monera"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Chromista"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Archaea"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Protozoa"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Viruses"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Prions"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Eubacteria"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Algae"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Myxomycota"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Cyanophyta"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Eukaryota"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Archaeplastida"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Opisthokonta"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Excavata"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Rhodophyta"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Stramenopiles"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Microsporidia"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Haptophyta"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Cryptophyta"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Glaucophyta"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Apusozoa"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            Name = "Carnivora"
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 2,
                            Name = "Primates"
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 3,
                            Name = "Rodentia"
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 4,
                            Name = "Poales"
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 5,
                            Name = "Rosales"
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 6,
                            Name = "Fabales"
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 7,
                            Name = "Hypocreales"
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 8,
                            Name = "Eurotiales"
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 9,
                            Name = "Sordariales"
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 10,
                            Name = "Ciliatea"
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 11,
                            Name = "Dinoflagellata"
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 12,
                            Name = "Methanococcales"
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 13,
                            Name = "Methanobacteriales"
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 14,
                            Name = "Polypodiales"
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 15,
                            Name = "Cyatheales"
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 16,
                            Name = "Saccharomycetales"
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 17,
                            Name = "Agaricales"
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 18,
                            Name = "Coleochaetales"
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 19,
                            Name = "Spirochaetales"
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 20,
                            Name = "Corallinales"
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 21,
                            Name = "Psamminida"
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 22,
                            Name = "Cercomonadida"
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 23,
                            Name = "Cryptomonadales"
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 24,
                            Name = "Haptonematales"
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 25,
                            Name = "Acanthoecida"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.OrganismGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OrganismGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mammals",
                            Symbol = "M"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Plants",
                            Symbol = "P"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fungi",
                            Symbol = "F"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Microorganisms",
                            Symbol = "Mico"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Viruses",
                            Symbol = "V"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.OrganismGroupSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrganismGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganismGroupId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("OrganismGroupSpecies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrganismGroupId = 1,
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrganismGroupId = 2,
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrganismGroupId = 3,
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 4,
                            OrganismGroupId = 1,
                            SpeciesId = 11
                        },
                        new
                        {
                            Id = 5,
                            OrganismGroupId = 2,
                            SpeciesId = 12
                        },
                        new
                        {
                            Id = 6,
                            OrganismGroupId = 1,
                            SpeciesId = 13
                        },
                        new
                        {
                            Id = 7,
                            OrganismGroupId = 1,
                            SpeciesId = 15
                        },
                        new
                        {
                            Id = 8,
                            OrganismGroupId = 1,
                            SpeciesId = 16
                        },
                        new
                        {
                            Id = 9,
                            OrganismGroupId = 1,
                            SpeciesId = 17
                        },
                        new
                        {
                            Id = 10,
                            OrganismGroupId = 1,
                            SpeciesId = 18
                        },
                        new
                        {
                            Id = 11,
                            OrganismGroupId = 2,
                            SpeciesId = 19
                        },
                        new
                        {
                            Id = 12,
                            OrganismGroupId = 2,
                            SpeciesId = 20
                        },
                        new
                        {
                            Id = 13,
                            OrganismGroupId = 2,
                            SpeciesId = 21
                        },
                        new
                        {
                            Id = 14,
                            OrganismGroupId = 2,
                            SpeciesId = 22
                        },
                        new
                        {
                            Id = 15,
                            OrganismGroupId = 2,
                            SpeciesId = 23
                        },
                        new
                        {
                            Id = 16,
                            OrganismGroupId = 3,
                            SpeciesId = 24
                        },
                        new
                        {
                            Id = 17,
                            OrganismGroupId = 3,
                            SpeciesId = 25
                        },
                        new
                        {
                            Id = 18,
                            OrganismGroupId = 3,
                            SpeciesId = 14
                        },
                        new
                        {
                            Id = 19,
                            OrganismGroupId = 4,
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 20,
                            OrganismGroupId = 4,
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 21,
                            OrganismGroupId = 4,
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 22,
                            OrganismGroupId = 4,
                            SpeciesId = 7
                        },
                        new
                        {
                            Id = 23,
                            OrganismGroupId = 5,
                            SpeciesId = 9
                        },
                        new
                        {
                            Id = 24,
                            OrganismGroupId = 4,
                            SpeciesId = 8
                        },
                        new
                        {
                            Id = 25,
                            OrganismGroupId = 4,
                            SpeciesId = 10
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Phylum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KingdomId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("KingdomId");

                    b.ToTable("Phyla");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KingdomId = 1,
                            Name = "Chordata"
                        },
                        new
                        {
                            Id = 2,
                            KingdomId = 2,
                            Name = "Tracheophyta"
                        },
                        new
                        {
                            Id = 3,
                            KingdomId = 3,
                            Name = "Ascomycota"
                        },
                        new
                        {
                            Id = 4,
                            KingdomId = 4,
                            Name = "Ciliophora"
                        },
                        new
                        {
                            Id = 5,
                            KingdomId = 5,
                            Name = "Cyanobacteria"
                        },
                        new
                        {
                            Id = 6,
                            KingdomId = 6,
                            Name = "Phaeophyceae"
                        },
                        new
                        {
                            Id = 7,
                            KingdomId = 7,
                            Name = "Euryarchaeota"
                        },
                        new
                        {
                            Id = 8,
                            KingdomId = 8,
                            Name = "Amoebozoa"
                        },
                        new
                        {
                            Id = 9,
                            KingdomId = 9,
                            Name = "Retroviridae"
                        },
                        new
                        {
                            Id = 10,
                            KingdomId = 10,
                            Name = "Viroids"
                        },
                        new
                        {
                            Id = 11,
                            KingdomId = 3,
                            Name = "Zygomycota"
                        },
                        new
                        {
                            Id = 12,
                            KingdomId = 2,
                            Name = "Angiosperms"
                        },
                        new
                        {
                            Id = 13,
                            KingdomId = 6,
                            Name = "Dinophyta"
                        },
                        new
                        {
                            Id = 14,
                            KingdomId = 7,
                            Name = "Methanobacteria"
                        },
                        new
                        {
                            Id = 15,
                            KingdomId = 3,
                            Name = "Basidiomycota"
                        },
                        new
                        {
                            Id = 16,
                            KingdomId = 12,
                            Name = "Chlorophyta"
                        },
                        new
                        {
                            Id = 17,
                            KingdomId = 4,
                            Name = "Foraminifera"
                        },
                        new
                        {
                            Id = 18,
                            KingdomId = 8,
                            Name = "Apicomplexa"
                        },
                        new
                        {
                            Id = 19,
                            KingdomId = 5,
                            Name = "Spirochaetes"
                        },
                        new
                        {
                            Id = 20,
                            KingdomId = 19,
                            Name = "Rhodophyta"
                        },
                        new
                        {
                            Id = 21,
                            KingdomId = 4,
                            Name = "Xenophyophorea"
                        },
                        new
                        {
                            Id = 22,
                            KingdomId = 8,
                            Name = "Cercozoa"
                        },
                        new
                        {
                            Id = 23,
                            KingdomId = 24,
                            Name = "Glaucophyta"
                        },
                        new
                        {
                            Id = 24,
                            KingdomId = 22,
                            Name = "Haptophyceae"
                        },
                        new
                        {
                            Id = 25,
                            KingdomId = 17,
                            Name = "Choanoflagellata"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ResearchDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResearchSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResearchSubjectId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("ResearchRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tracking lion movement",
                            Name = "Lion Field Study",
                            Notes = "GTM-001",
                            ResearchDate = new DateTime(2020, 12, 16, 0, 21, 59, 611, DateTimeKind.Local).AddTicks(3697),
                            ResearchSubjectId = 1,
                            Result = "Successful"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Studying the growth patterns of Zea mays",
                            Name = "Corn Growth Analysis",
                            Notes = "GTM-002",
                            ResearchDate = new DateTime(2022, 12, 16, 0, 21, 59, 611, DateTimeKind.Local).AddTicks(5574),
                            ResearchSubjectId = 2,
                            Result = "Data Collected"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Exploring species diversity of Xylaria in rainforests",
                            Name = "Fungal Diversity Survey",
                            Notes = "GTM-003",
                            ResearchDate = new DateTime(2023, 12, 16, 0, 21, 59, 611, DateTimeKind.Local).AddTicks(5582),
                            ResearchSubjectId = 3,
                            Result = "Preliminary Findings"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Examining kelp forest biodiversity",
                            Name = "Kelp Biodiversity Study",
                            Notes = "GTM-004",
                            ResearchDate = new DateTime(2024, 6, 16, 0, 21, 59, 611, DateTimeKind.Local).AddTicks(5585),
                            ResearchSubjectId = 4,
                            Result = "Ongoing"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Investigating plant viroid infections in cereals",
                            Name = "Viroid Infection Study",
                            Notes = "GTM-005",
                            ResearchDate = new DateTime(2021, 12, 16, 0, 21, 59, 611, DateTimeKind.Local).AddTicks(5622),
                            ResearchSubjectId = 5,
                            Result = "Completed"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecordAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("ResearchRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ResearchRecordId");

                    b.ToTable("ResearchRecordAuthors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ResearchRecordId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            ResearchRecordId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            ResearchRecordId = 3
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 1,
                            ResearchRecordId = 4
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            ResearchRecordId = 5
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecordSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResearchRecordId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResearchRecordId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("ResearchRecordSpecies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ResearchRecordId = 1,
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            ResearchRecordId = 2,
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            ResearchRecordId = 3,
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 4,
                            ResearchRecordId = 4,
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 5,
                            ResearchRecordId = 5,
                            SpeciesId = 10
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Budget")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamMembers")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("ResearchSubjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 100000f,
                            Description = "Research on lion populations",
                            EndDate = new DateTime(2024, 12, 16, 0, 21, 59, 610, DateTimeKind.Local).AddTicks(4966),
                            Name = "Lion Conservation",
                            Project = "Save the Lions",
                            StartDate = new DateTime(2019, 12, 16, 0, 21, 59, 609, DateTimeKind.Local).AddTicks(386),
                            Status = "Completed",
                            TeamMembers = "Team A"
                        },
                        new
                        {
                            Id = 2,
                            Budget = 50000f,
                            Description = "Improving corn genetics",
                            Name = "Corn Genetics",
                            Project = "Better Yield",
                            StartDate = new DateTime(2021, 12, 16, 0, 21, 59, 610, DateTimeKind.Local).AddTicks(6575),
                            Status = "Ongoing",
                            TeamMembers = "Team B"
                        },
                        new
                        {
                            Id = 3,
                            Budget = 75000f,
                            Description = "Exploration of fungal species diversity in mountain and rainforest ecosystems",
                            Name = "Fungal Diversity",
                            Project = "Fungi in the Wild",
                            StartDate = new DateTime(2022, 12, 16, 0, 21, 59, 610, DateTimeKind.Local).AddTicks(6590),
                            Status = "Ongoing",
                            TeamMembers = "Team C"
                        },
                        new
                        {
                            Id = 4,
                            Budget = 60000f,
                            Description = "Studying the role of kelp in marine ecosystems",
                            Name = "Kelp Ecology",
                            Project = "Exploring Kelp Forests",
                            StartDate = new DateTime(2023, 12, 16, 0, 21, 59, 610, DateTimeKind.Local).AddTicks(6593),
                            Status = "Ongoing",
                            TeamMembers = "Team D"
                        },
                        new
                        {
                            Id = 5,
                            Budget = 120000f,
                            Description = "Research on the molecular biology of plant viroids",
                            EndDate = new DateTime(2022, 12, 16, 0, 21, 59, 610, DateTimeKind.Local).AddTicks(6598),
                            Name = "Viroid Research",
                            Project = "Understanding Viroids",
                            StartDate = new DateTime(2020, 12, 16, 0, 21, 59, 610, DateTimeKind.Local).AddTicks(6595),
                            Status = "Completed",
                            TeamMembers = "Team E"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommonName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ConservationStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("GenusId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("IsEndemic")
                        .HasColumnType("bit");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ConservationStatusId");

                    b.HasIndex("GenusId");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommonName = "Lion",
                            ConservationStatusId = 2,
                            GenusId = 1,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcStHaZRuS0ZG3EgsrRLEjQShi2e9eXIY9vjJg&s",
                            IsEndemic = true,
                            ScientificName = "Panthera leo"
                        },
                        new
                        {
                            Id = 2,
                            CommonName = "Corn",
                            ConservationStatusId = 1,
                            GenusId = 2,
                            ImageUrl = "https://cdn.britannica.com/36/167236-050-BF90337E/Ears-corn.jpg",
                            IsEndemic = true,
                            ScientificName = "Zea mays"
                        },
                        new
                        {
                            Id = 3,
                            CommonName = "Caterpillar Fungus",
                            ConservationStatusId = 3,
                            GenusId = 3,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSkaoeue9Hceyj3bot9dpM0-gDHWoUib0tj8A&s",
                            IsEndemic = false,
                            ScientificName = "Cordyceps militaris"
                        },
                        new
                        {
                            Id = 4,
                            CommonName = "Paramecium",
                            ConservationStatusId = 1,
                            GenusId = 4,
                            ImageUrl = "https://cdn.mos.cms.futurecdn.net/q7628oSE2QHHdJjUagWiX-1200-80.jpg",
                            IsEndemic = false,
                            ScientificName = "Paramecium aurelia"
                        },
                        new
                        {
                            Id = 5,
                            CommonName = "Anabaena",
                            ConservationStatusId = 1,
                            GenusId = 5,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSW3lje0JxnGVJ6eK79rAHb3OmMgGrv9jcdcA&s",
                            IsEndemic = false,
                            ScientificName = "Anabaena variabilis"
                        },
                        new
                        {
                            Id = 6,
                            CommonName = "Kelp",
                            ConservationStatusId = 1,
                            GenusId = 6,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcSLfH3aaHFc-Kpnw51YWd8g9pyJ219u2BCA&s",
                            IsEndemic = false,
                            ScientificName = "Laminaria digitata"
                        },
                        new
                        {
                            Id = 7,
                            CommonName = "Methanogen",
                            ConservationStatusId = 2,
                            GenusId = 7,
                            ImageUrl = "https://example.com/methanogen.jpg",
                            IsEndemic = true,
                            ScientificName = "Methanobrevibacter smithii"
                        },
                        new
                        {
                            Id = 8,
                            CommonName = "Amoeba",
                            ConservationStatusId = 3,
                            GenusId = 8,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQn4ZWvFRntfPohCXiWi2YzMqYh5N7lb18YLg&s",
                            IsEndemic = false,
                            ScientificName = "Amoeba proteus"
                        },
                        new
                        {
                            Id = 9,
                            CommonName = "HIV",
                            ConservationStatusId = 4,
                            GenusId = 9,
                            ImageUrl = "https://cdn.diag.vn/2024/06/be5c4709-virus-hiv-co-the-bat-nguon-tu-mot-loai-virus-gay-chung-suy-giam-mien-dich-co-o-chau-phi.jpg",
                            IsEndemic = false,
                            ScientificName = "HIV-1"
                        },
                        new
                        {
                            Id = 10,
                            CommonName = "Cereal Viroid",
                            ConservationStatusId = 1,
                            GenusId = 10,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQU9pgkXmprjWgOP1jKa2Afy-oCsxFr_XdU4Q&s",
                            IsEndemic = false,
                            ScientificName = "Viroidia cereale"
                        },
                        new
                        {
                            Id = 11,
                            CommonName = "Horse",
                            ConservationStatusId = 2,
                            GenusId = 1,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTpXRU0r__5TfJRHzYsURrCjN2DPccfb9rPAw&s",
                            IsEndemic = false,
                            ScientificName = "Equus ferus"
                        },
                        new
                        {
                            Id = 12,
                            CommonName = "Wheat",
                            ConservationStatusId = 1,
                            GenusId = 2,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTO3hKYXvDwRE1F5EwfyCCATck96pnx2a1hEQ&s",
                            IsEndemic = false,
                            ScientificName = "Triticum aestivum"
                        },
                        new
                        {
                            Id = 13,
                            CommonName = "Domestic Cat",
                            ConservationStatusId = 1,
                            GenusId = 1,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ1flLRYCdDfRhhIZWkRtGl4kztQlzOwJawcQ&s",
                            IsEndemic = false,
                            ScientificName = "Felis catus"
                        },
                        new
                        {
                            Id = 14,
                            CommonName = "Red Fox",
                            ConservationStatusId = 1,
                            GenusId = 2,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSlYjxPCcG79fd4nOZWZAZaT91RTos9whwigw&s",
                            IsEndemic = false,
                            ScientificName = "Vulpes vulpes"
                        },
                        new
                        {
                            Id = 15,
                            CommonName = "Western Gorilla",
                            ConservationStatusId = 3,
                            GenusId = 3,
                            ImageUrl = "https://files.worldwildlife.org/wwfcmsprod/images/Mountain_Gorilla_Silverback_WW22557/story_full_width/36fcoamev0_Mountain_Gorilla_Silverback_WW22557.jpg",
                            IsEndemic = true,
                            ScientificName = "Gorilla gorilla"
                        },
                        new
                        {
                            Id = 16,
                            CommonName = "Rhesus Macaque",
                            ConservationStatusId = 1,
                            GenusId = 4,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQklBGcrImdaoAu_LWleoTyvsGC4jiUtMcJ2g&s",
                            IsEndemic = false,
                            ScientificName = "Macaca mulatta"
                        },
                        new
                        {
                            Id = 17,
                            CommonName = "Brown Rat",
                            ConservationStatusId = 1,
                            GenusId = 5,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRjoyulruO9F5UdbHEfG2__K9_Bql5cqhxutQ&s",
                            IsEndemic = false,
                            ScientificName = "Rattus norvegicus"
                        },
                        new
                        {
                            Id = 18,
                            CommonName = "European Rabbit",
                            ConservationStatusId = 2,
                            GenusId = 5,
                            ImageUrl = "https://images.prismic.io/nationalparks/b5f776c8-7ee3-4fbd-95f7-5d104f906b77_european-rabbit.jpeg?auto=compress,format",
                            IsEndemic = false,
                            ScientificName = "Oryctolagus cuniculus"
                        },
                        new
                        {
                            Id = 19,
                            CommonName = "Rye",
                            ConservationStatusId = 1,
                            GenusId = 6,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRTqMjXFlTbWZ5BP4G6aMmRfumw16uSuMaYpQ&s",
                            IsEndemic = false,
                            ScientificName = "Secale cereale"
                        },
                        new
                        {
                            Id = 20,
                            CommonName = "Raspberry",
                            ConservationStatusId = 1,
                            GenusId = 7,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcROBrYaD-hkqhhVw04Hmvz_K9P-rQYxG1TMoA&s",
                            IsEndemic = false,
                            ScientificName = "Rubus idaeus"
                        },
                        new
                        {
                            Id = 21,
                            CommonName = "Apple",
                            ConservationStatusId = 1,
                            GenusId = 7,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJ-Z2tQrwCbjm15WrLsfQ9yud3ix_VT167pg&s",
                            IsEndemic = false,
                            ScientificName = "Malus domestica"
                        },
                        new
                        {
                            Id = 22,
                            CommonName = "Common Bean",
                            ConservationStatusId = 1,
                            GenusId = 8,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFUDJSiv2kuNFnzWrqNP70BJ6nqINueeaFDw&s",
                            IsEndemic = false,
                            ScientificName = "Phaseolus vulgaris"
                        },
                        new
                        {
                            Id = 23,
                            CommonName = "Mung Bean",
                            ConservationStatusId = 1,
                            GenusId = 8,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQKrHKhuRqxCnwaERRfN5BSi3LfDXzJqpVhgg&s",
                            IsEndemic = false,
                            ScientificName = "Vigna radiata"
                        },
                        new
                        {
                            Id = 24,
                            CommonName = "Ergot Fungus",
                            ConservationStatusId = 1,
                            GenusId = 9,
                            ImageUrl = "https://cdn.britannica.com/43/221943-050-6C1E89EB/Ergot-fungus-ears-of-a-rye-cereal-grass-plant.jpg",
                            IsEndemic = false,
                            ScientificName = "Claviceps purpurea"
                        },
                        new
                        {
                            Id = 25,
                            CommonName = "Aspergillus",
                            ConservationStatusId = 1,
                            GenusId = 10,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ80RCCWc8bAH1kOGAhwmL80o0CJlSPT1v0ag&s",
                            IsEndemic = false,
                            ScientificName = "Aspergillus flavus"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.SpeciesAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("SpeciesAuthors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            SpeciesId = 7
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            SpeciesId = 8
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            SpeciesId = 9
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            SpeciesId = 10
                        });
                });

            modelBuilder.Entity("SpeciesHabitat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HabitatId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HabitatId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("SpeciesHabitats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HabitatId = 1,
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            HabitatId = 2,
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            HabitatId = 3,
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 4,
                            HabitatId = 5,
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 5,
                            HabitatId = 6,
                            SpeciesId = 5
                        },
                        new
                        {
                            Id = 6,
                            HabitatId = 8,
                            SpeciesId = 6
                        },
                        new
                        {
                            Id = 7,
                            HabitatId = 8,
                            SpeciesId = 7
                        },
                        new
                        {
                            Id = 8,
                            HabitatId = 7,
                            SpeciesId = 8
                        },
                        new
                        {
                            Id = 9,
                            HabitatId = 6,
                            SpeciesId = 9
                        },
                        new
                        {
                            Id = 10,
                            HabitatId = 5,
                            SpeciesId = 10
                        },
                        new
                        {
                            Id = 11,
                            HabitatId = 1,
                            SpeciesId = 11
                        },
                        new
                        {
                            Id = 12,
                            HabitatId = 2,
                            SpeciesId = 12
                        },
                        new
                        {
                            Id = 13,
                            HabitatId = 1,
                            SpeciesId = 13
                        },
                        new
                        {
                            Id = 14,
                            HabitatId = 7,
                            SpeciesId = 14
                        },
                        new
                        {
                            Id = 15,
                            HabitatId = 3,
                            SpeciesId = 15
                        },
                        new
                        {
                            Id = 16,
                            HabitatId = 5,
                            SpeciesId = 16
                        },
                        new
                        {
                            Id = 17,
                            HabitatId = 1,
                            SpeciesId = 17
                        },
                        new
                        {
                            Id = 18,
                            HabitatId = 7,
                            SpeciesId = 18
                        },
                        new
                        {
                            Id = 19,
                            HabitatId = 5,
                            SpeciesId = 19
                        },
                        new
                        {
                            Id = 20,
                            HabitatId = 7,
                            SpeciesId = 20
                        },
                        new
                        {
                            Id = 21,
                            HabitatId = 7,
                            SpeciesId = 21
                        },
                        new
                        {
                            Id = 22,
                            HabitatId = 6,
                            SpeciesId = 22
                        },
                        new
                        {
                            Id = 23,
                            HabitatId = 6,
                            SpeciesId = 23
                        },
                        new
                        {
                            Id = 24,
                            HabitatId = 8,
                            SpeciesId = 24
                        },
                        new
                        {
                            Id = 25,
                            HabitatId = 6,
                            SpeciesId = 25
                        });
                });

            modelBuilder.Entity("GeographicDistribution", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("GeographicDistributions")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Characteristic", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("Characteristics")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Class", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Phylum", "Phylum")
                        .WithMany("Classes")
                        .HasForeignKey("PhylumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phylum");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Family", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Order", "Order")
                        .WithMany("Families")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Genus", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Family", "Family")
                        .WithMany("Genera")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Order", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Class", "Class")
                        .WithMany("Orders")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.OrganismGroupSpecies", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.OrganismGroup", "OrganismGroup")
                        .WithMany("OrganismGroupSpecies")
                        .HasForeignKey("OrganismGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("OrganismGroupSpecies")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganismGroup");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Phylum", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Kingdom", "Kingdom")
                        .WithMany("Phyla")
                        .HasForeignKey("KingdomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kingdom");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecord", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.ResearchSubject", "ResearchSubject")
                        .WithMany("ResearchRecords")
                        .HasForeignKey("ResearchSubjectId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", null)
                        .WithMany("ResearchRecords")
                        .HasForeignKey("SpeciesId");

                    b.Navigation("ResearchSubject");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecordAuthor", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Author", "Author")
                        .WithMany("ResearchRecordAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.ResearchRecord", "ResearchRecord")
                        .WithMany("ResearchRecordAuthors")
                        .HasForeignKey("ResearchRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ResearchRecord");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecordSpecies", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.ResearchRecord", "ResearchRecord")
                        .WithMany("ResearchRecordSpecies")
                        .HasForeignKey("ResearchRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("ResearchRecordSpecies")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchRecord");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Species", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.ConservationStatus", "ConservationStatus")
                        .WithMany("Species")
                        .HasForeignKey("ConservationStatusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ResearchDatabase.Domain.Entities.Genus", "Genus")
                        .WithMany("Species")
                        .HasForeignKey("GenusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ConservationStatus");

                    b.Navigation("Genus");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.SpeciesAuthor", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Author", "Author")
                        .WithMany("SpeciesAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("SpeciesAuthors")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("SpeciesHabitat", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Habitat", "Habitat")
                        .WithMany("SpeciesHabitats")
                        .HasForeignKey("HabitatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("SpeciesHabitats")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitat");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Author", b =>
                {
                    b.Navigation("ResearchRecordAuthors");

                    b.Navigation("SpeciesAuthors");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Class", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ConservationStatus", b =>
                {
                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Family", b =>
                {
                    b.Navigation("Genera");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Genus", b =>
                {
                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Habitat", b =>
                {
                    b.Navigation("SpeciesHabitats");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Kingdom", b =>
                {
                    b.Navigation("Phyla");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Order", b =>
                {
                    b.Navigation("Families");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.OrganismGroup", b =>
                {
                    b.Navigation("OrganismGroupSpecies");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Phylum", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecord", b =>
                {
                    b.Navigation("ResearchRecordAuthors");

                    b.Navigation("ResearchRecordSpecies");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchSubject", b =>
                {
                    b.Navigation("ResearchRecords");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Species", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("GeographicDistributions");

                    b.Navigation("OrganismGroupSpecies");

                    b.Navigation("ResearchRecordSpecies");

                    b.Navigation("ResearchRecords");

                    b.Navigation("SpeciesAuthors");

                    b.Navigation("SpeciesHabitats");
                });
#pragma warning restore 612, 618
        }
    }
}
