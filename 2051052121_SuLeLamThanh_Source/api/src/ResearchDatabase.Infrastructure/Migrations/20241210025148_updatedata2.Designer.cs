// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResearchDatabase.Infrastructure.Data;

#nullable disable

namespace ResearchDatabase.Infrastructure.Migrations
{
    [DbContext(typeof(ResearchDbContext))]
    [Migration("20241210025148_updatedata2")]
    partial class updatedata2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeographicDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("GeographicDistributions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Kenya",
                            Location = "Savannah",
                            Notes = "Common in protected areas",
                            Region = "Africa",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            Country = "USA",
                            Location = "Fields",
                            Notes = "Widely cultivated",
                            Region = "Americas",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            Country = "China",
                            Location = "Mountains",
                            Notes = "Rare, used in traditional medicine",
                            Region = "Asia",
                            SpeciesId = 3
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Affiliation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Affiliation = "Wildlife Conservation Society",
                            Name = "Jane Goodall"
                        },
                        new
                        {
                            Id = 2,
                            Affiliation = "International Maize and Wheat Improvement Center",
                            Name = "Norman Borlaug"
                        },
                        new
                        {
                            Id = 3,
                            Affiliation = "Fungal Research Institute",
                            Name = "Fleming Xia"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CharacteristicType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PhylumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhylumId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mammalia",
                            PhylumId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Magnoliopsida",
                            PhylumId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sordariomycetes",
                            PhylumId = 3
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ConservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ConservationStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Not currently at risk",
                            Name = "Least Concern",
                            Severity = "Low"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Facing risk of extinction in the wild",
                            Name = "Vulnerable",
                            Severity = "Medium"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Families");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Felidae",
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poaceae",
                            OrderId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clavicipitaceae",
                            OrderId = 3
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Genus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Genera");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FamilyId = 1,
                            Name = "Panthera"
                        },
                        new
                        {
                            Id = 2,
                            FamilyId = 2,
                            Name = "Zea"
                        },
                        new
                        {
                            Id = 3,
                            FamilyId = 3,
                            Name = "Cordyceps"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Habitat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<float?>("Humidity")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float?>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Habitats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Climate = "Dry",
                            Description = "Grasslands with sparse trees",
                            Humidity = 40f,
                            Name = "Savannah",
                            Temperature = 30f
                        },
                        new
                        {
                            Id = 2,
                            Climate = "Humid",
                            Description = "Dense, humid forests",
                            Humidity = 85f,
                            Name = "Tropical Rainforest",
                            Temperature = 25f
                        },
                        new
                        {
                            Id = 3,
                            Climate = "Cold",
                            Description = "High altitude ecosystems",
                            Humidity = 60f,
                            Name = "Mountain Ranges",
                            Temperature = 10f
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Kingdom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Kingdoms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Animalia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Plantae"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fungi"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            Name = "Carnivora"
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 2,
                            Name = "Poales"
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 3,
                            Name = "Hypocreales"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.OrganismGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OrganismGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mammals",
                            Symbol = "M"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Plants",
                            Symbol = "P"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fungi",
                            Symbol = "F"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.OrganismGroupSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrganismGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganismGroupId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("OrganismGroupSpecies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrganismGroupId = 1,
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrganismGroupId = 2,
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrganismGroupId = 3,
                            SpeciesId = 3
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Phylum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KingdomId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("KingdomId");

                    b.ToTable("Phyla");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KingdomId = 1,
                            Name = "Chordata"
                        },
                        new
                        {
                            Id = 2,
                            KingdomId = 2,
                            Name = "Tracheophyta"
                        },
                        new
                        {
                            Id = 3,
                            KingdomId = 3,
                            Name = "Ascomycota"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ResearchDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResearchSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResearchSubjectId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("ResearchRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tracking lion movement",
                            Name = "Lion Field Study",
                            Notes = "GTM-001",
                            ResearchDate = new DateTime(2020, 12, 10, 9, 51, 47, 512, DateTimeKind.Local).AddTicks(256),
                            ResearchSubjectId = 1,
                            Result = "Successful"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Studying the growth patterns of Zea mays",
                            Name = "Corn Growth Analysis",
                            Notes = "GTM-002",
                            ResearchDate = new DateTime(2022, 12, 10, 9, 51, 47, 512, DateTimeKind.Local).AddTicks(1489),
                            ResearchSubjectId = 2,
                            Result = "Data Collected"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Exploring species diversity of Xylaria in rainforests",
                            Name = "Fungal Diversity Survey",
                            Notes = "GTM-002",
                            ResearchDate = new DateTime(2023, 12, 10, 9, 51, 47, 512, DateTimeKind.Local).AddTicks(1496),
                            ResearchSubjectId = 3,
                            Result = "Preliminary Findings"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecordAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("ResearchRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ResearchRecordId");

                    b.ToTable("ResearchRecordAuthors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ResearchRecordId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            ResearchRecordId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            ResearchRecordId = 3
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecordSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResearchRecordId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<int?>("SpeciesId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResearchRecordId");

                    b.HasIndex("SpeciesId");

                    b.HasIndex("SpeciesId1");

                    b.ToTable("ResearchRecordSpecies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ResearchRecordId = 1,
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            ResearchRecordId = 2,
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            ResearchRecordId = 3,
                            SpeciesId = 3
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Budget")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamMembers")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("ResearchSubjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 100000f,
                            Description = "Research on lion populations",
                            EndDate = new DateTime(2024, 12, 10, 9, 51, 47, 511, DateTimeKind.Local).AddTicks(5137),
                            Name = "Lion Conservation",
                            Project = "Save the Lions",
                            StartDate = new DateTime(2019, 12, 10, 9, 51, 47, 510, DateTimeKind.Local).AddTicks(5059),
                            Status = "Completed",
                            TeamMembers = "Team A"
                        },
                        new
                        {
                            Id = 2,
                            Budget = 50000f,
                            Description = "Improving corn genetics",
                            Name = "Corn Genetics",
                            Project = "Better Yield",
                            StartDate = new DateTime(2021, 12, 10, 9, 51, 47, 511, DateTimeKind.Local).AddTicks(6240),
                            Status = "Ongoing",
                            TeamMembers = "Team B"
                        },
                        new
                        {
                            Id = 3,
                            Budget = 75000f,
                            Description = "Exploration of fungal species diversity in mountain and rainforest ecosystems",
                            Name = "Fungal Diversity",
                            Project = "Fungi in the Wild",
                            StartDate = new DateTime(2022, 12, 10, 9, 51, 47, 511, DateTimeKind.Local).AddTicks(6251),
                            Status = "Ongoing",
                            TeamMembers = "Team C"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommonName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ConservationStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("GenusId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("IsEndemic")
                        .HasColumnType("bit");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TaxonomyBrowser")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ConservationStatusId");

                    b.HasIndex("GenusId");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommonName = "Lion",
                            ConservationStatusId = 2,
                            GenusId = 1,
                            ImageUrl = "https://example.com/images/lion.jpg",
                            IsEndemic = true,
                            ScientificName = "Panthera leo",
                            TaxonomyBrowser = "https://example.com/taxonomy/panthera-leo"
                        },
                        new
                        {
                            Id = 2,
                            CommonName = "Corn",
                            ConservationStatusId = 1,
                            GenusId = 2,
                            ImageUrl = "https://example.com/images/corn.jpg",
                            IsEndemic = true,
                            ScientificName = "Zea mays",
                            TaxonomyBrowser = "https://example.com/taxonomy/zea-mays"
                        },
                        new
                        {
                            Id = 3,
                            CommonName = "Caterpillar Fungus",
                            ConservationStatusId = 1,
                            GenusId = 3,
                            ImageUrl = "https://example.com/images/caterpillar-fungus.jpg",
                            IsEndemic = false,
                            ScientificName = "Cordyceps militaris",
                            TaxonomyBrowser = "https://example.com/taxonomy/cordyceps-militaris"
                        });
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.SpeciesAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("SpeciesAuthors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            SpeciesId = 3
                        });
                });

            modelBuilder.Entity("SpeciesHabitat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HabitatId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HabitatId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("SpeciesHabitats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HabitatId = 1,
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            HabitatId = 2,
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            HabitatId = 3,
                            SpeciesId = 3
                        });
                });

            modelBuilder.Entity("GeographicDistribution", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("GeographicDistributions")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Characteristic", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("Characteristics")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Class", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Phylum", "Phylum")
                        .WithMany("Classes")
                        .HasForeignKey("PhylumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phylum");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Family", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Order", "Order")
                        .WithMany("Families")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Genus", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Family", "Family")
                        .WithMany("Genera")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Order", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Class", "Class")
                        .WithMany("Orders")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.OrganismGroupSpecies", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.OrganismGroup", "OrganismGroup")
                        .WithMany("OrganismGroupSpecies")
                        .HasForeignKey("OrganismGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("OrganismGroupSpecies")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganismGroup");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Phylum", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Kingdom", "Kingdom")
                        .WithMany("Phyla")
                        .HasForeignKey("KingdomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kingdom");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecord", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.ResearchSubject", "ResearchSubject")
                        .WithMany("ResearchRecords")
                        .HasForeignKey("ResearchSubjectId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", null)
                        .WithMany("ResearchRecords")
                        .HasForeignKey("SpeciesId");

                    b.Navigation("ResearchSubject");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecordAuthor", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Author", "Author")
                        .WithMany("ResearchRecordAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.ResearchRecord", "ResearchRecord")
                        .WithMany("ResearchRecordAuthors")
                        .HasForeignKey("ResearchRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ResearchRecord");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecordSpecies", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.ResearchRecord", "ResearchRecord")
                        .WithMany("ResearchRecordSpecies")
                        .HasForeignKey("ResearchRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", null)
                        .WithMany("ResearchRecordSpecies")
                        .HasForeignKey("SpeciesId1");

                    b.Navigation("ResearchRecord");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Species", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.ConservationStatus", "ConservationStatus")
                        .WithMany("Species")
                        .HasForeignKey("ConservationStatusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ResearchDatabase.Domain.Entities.Genus", "Genus")
                        .WithMany("Species")
                        .HasForeignKey("GenusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ConservationStatus");

                    b.Navigation("Genus");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.SpeciesAuthor", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Author", "Author")
                        .WithMany("SpeciesAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("SpeciesAuthors")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("SpeciesHabitat", b =>
                {
                    b.HasOne("ResearchDatabase.Domain.Entities.Habitat", "Habitat")
                        .WithMany("SpeciesHabitats")
                        .HasForeignKey("HabitatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResearchDatabase.Domain.Entities.Species", "Species")
                        .WithMany("SpeciesHabitats")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitat");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Author", b =>
                {
                    b.Navigation("ResearchRecordAuthors");

                    b.Navigation("SpeciesAuthors");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Class", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ConservationStatus", b =>
                {
                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Family", b =>
                {
                    b.Navigation("Genera");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Genus", b =>
                {
                    b.Navigation("Species");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Habitat", b =>
                {
                    b.Navigation("SpeciesHabitats");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Kingdom", b =>
                {
                    b.Navigation("Phyla");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Order", b =>
                {
                    b.Navigation("Families");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.OrganismGroup", b =>
                {
                    b.Navigation("OrganismGroupSpecies");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Phylum", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchRecord", b =>
                {
                    b.Navigation("ResearchRecordAuthors");

                    b.Navigation("ResearchRecordSpecies");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.ResearchSubject", b =>
                {
                    b.Navigation("ResearchRecords");
                });

            modelBuilder.Entity("ResearchDatabase.Domain.Entities.Species", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("GeographicDistributions");

                    b.Navigation("OrganismGroupSpecies");

                    b.Navigation("ResearchRecordSpecies");

                    b.Navigation("ResearchRecords");

                    b.Navigation("SpeciesAuthors");

                    b.Navigation("SpeciesHabitats");
                });
#pragma warning restore 612, 618
        }
    }
}
